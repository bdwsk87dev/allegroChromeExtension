{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const DATE_REGEXP = new RegExp(\n  '^(\\\\d{4}):(\\\\d{2}):(\\\\d{2}) (\\\\d{2}):(\\\\d{2}):(\\\\d{2})' +\n  '(?:\\\\.(\\\\d{2}))?(?:([zZ])|([-+])(\\\\d{2}):(\\\\d{2}))?$'\n)\n\n/**\n * Pad EXIF date formatting.\n */\nfunction pad (num: number, length = 2) {\n  let value = num.toString()\n  let len = length - value.length\n\n  while (len > 0) {\n    len -= 1\n    value = `0${value}`\n  }\n\n  return value\n}\n\n/**\n * Parse EXIF date string into `Date`.\n */\nexport function parse (value: string): Date {\n  const m = DATE_REGEXP.exec(value)\n\n  if (m == null) {\n    return\n  }\n\n  const date = new Date()\n  const offset = m[8] ? 0 : (m[9] ? ((Number(m[10]) * 60 + Number(m[11])) * (m[9] === '+' ? 1 : -1)) : 0)\n\n  date.setUTCFullYear(Number(m[1]))\n  date.setUTCMonth(Number(m[2]) - 1)\n  date.setUTCDate(Number(m[3]))\n  date.setUTCHours(Number(m[4]))\n  date.setUTCMinutes(Number(m[5]) + offset)\n  date.setUTCSeconds(Number(m[6]))\n  date.setUTCMilliseconds((Number(m[7]) * 10) || 0)\n\n  return date\n}\n\n/**\n * Format `Date` into EXIF format.\n */\nexport function format (value: Date, subsecond?: boolean, timezone?: boolean): string {\n  if (isNaN(value.getTime())) {\n    return\n  }\n\n  const date = `${pad(value.getUTCFullYear(), 4)}:${pad(value.getUTCMonth() + 1)}:${pad(value.getUTCDate())}`\n  const time = `${pad(value.getUTCHours())}:${pad(value.getUTCMinutes())}:${pad(value.getUTCSeconds())}`\n  const suffix = subsecond ? `.${Math.round(value.getUTCMilliseconds() / 10)}` : ''\n  const zone = timezone ? 'Z' : ''\n\n  return `${date} ${time}${suffix}${zone}`\n}\n"]}